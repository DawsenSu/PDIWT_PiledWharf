<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="OK" xml:space="preserve">
    <value>OK</value>
  </data>
  <data name="Cancel" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="Settings" xml:space="preserve">
    <value>Setttings</value>
  </data>
  <data name="Geometry" xml:space="preserve">
    <value>Geometry</value>
  </data>
  <data name="PileType" xml:space="preserve">
    <value>Pile Type</value>
  </data>
  <data name="SideLengthDiameter" xml:space="preserve">
    <value>Side Length / Diameter</value>
  </data>
  <data name="Concrete" xml:space="preserve">
    <value>Concrete</value>
  </data>
  <data name="Material" xml:space="preserve">
    <value>Material</value>
  </data>
  <data name="Modulus" xml:space="preserve">
    <value>Modulus(E)</value>
  </data>
  <data name="Poisson" xml:space="preserve">
    <value>Poisson(γ)</value>
  </data>
  <data name="Density" xml:space="preserve">
    <value>Density</value>
  </data>
  <data name="UnderWaterDensity" xml:space="preserve">
    <value>UnderWater Density</value>
  </data>
  <data name="Steel" xml:space="preserve">
    <value>Steel</value>
  </data>
  <data name="Water" xml:space="preserve">
    <value>Water</value>
  </data>
  <data name="WaterLevel" xml:space="preserve">
    <value>WaterLevel</value>
  </data>
  <data name="WaveHeight" xml:space="preserve">
    <value>Wave Height(H)</value>
  </data>
  <data name="WaveLength" xml:space="preserve">
    <value>Wave Length(L)</value>
  </data>
  <data name="WavePeriod" xml:space="preserve">
    <value>Wave Period(Tp)</value>
  </data>
  <data name="Wave" xml:space="preserve">
    <value>Wave</value>
  </data>
  <data name="Round" xml:space="preserve">
    <value>Round</value>
  </data>
  <data name="Square" xml:space="preserve">
    <value>Square</value>
  </data>
  <data name="Close" xml:space="preserve">
    <value>Close</value>
  </data>
  <data name="Success" xml:space="preserve">
    <value>Success</value>
  </data>
  <data name="Error" xml:space="preserve">
    <value>Error</value>
  </data>
  <data name="ImportFromFile" xml:space="preserve">
    <value>Import From File</value>
  </data>
  <data name="Choice" xml:space="preserve">
    <value>Choice</value>
  </data>
  <data name="StaadFile" xml:space="preserve">
    <value>Staad File</value>
  </data>
  <data name="ExcelFile" xml:space="preserve">
    <value>Excel File</value>
  </data>
  <data name="Path" xml:space="preserve">
    <value>Path</value>
  </data>
  <data name="Browse" xml:space="preserve">
    <value>Browse</value>
  </data>
  <data name="StaadFileFilter" xml:space="preserve">
    <value>Staad File(*.std)|*.std</value>
  </data>
  <data name="ExcelFileFilter" xml:space="preserve">
    <value>Excel File(*.xlsx)|*.xlsx</value>
  </data>
  <data name="Import" xml:space="preserve">
    <value>Import</value>
  </data>
  <data name="General" xml:space="preserve">
    <value>General</value>
  </data>
  <data name="StructureImportanceFactor" xml:space="preserve">
    <value>Structure Importance Factoer</value>
  </data>
  <data name="AntiEarthquakeIntensity" xml:space="preserve">
    <value>Anti-Earthquake Intensity</value>
  </data>
  <data name="PileWeightPartialFactor" xml:space="preserve">
    <value>Pile Weight Partial Factor</value>
  </data>
  <data name="FixedDepthFactor" xml:space="preserve">
    <value>Fixed Depth Factorη</value>
  </data>
  <data name="AntiEarthquakeAdjustmentFactor" xml:space="preserve">
    <value>Anti-Earthquake Adjustment Factor</value>
  </data>
  <data name="PileBasicInformation" xml:space="preserve">
    <value>Pile Basic Information</value>
  </data>
  <data name="PileSpatialInformation" xml:space="preserve">
    <value>Pile Spatial Inforamtion</value>
  </data>
  <data name="SquarePile" xml:space="preserve">
    <value>Square Pile</value>
  </data>
  <data name="TubePile" xml:space="preserve">
    <value>Tube Pile</value>
  </data>
  <data name="PHCTubePile" xml:space="preserve">
    <value>PHC Tube Pile</value>
  </data>
  <data name="SteelTubePile" xml:space="preserve">
    <value>Steel Tube Pile</value>
  </data>
  <data name="PileWidth" xml:space="preserve">
    <value>Pile Width(Pile Outside Diameter)</value>
  </data>
  <data name="PileInsideDiameter" xml:space="preserve">
    <value>Pile Inside Diameter</value>
  </data>
  <data name="IsFilledWithConcrete" xml:space="preserve">
    <value>Is Filled With Concrete</value>
  </data>
  <data name="ConcreteCoreLength" xml:space="preserve">
    <value>Concrete Core Length</value>
  </data>
  <data name="PileTipSealType" xml:space="preserve">
    <value>Pile Tip Seal Type</value>
  </data>
  <data name="PileTip_TotalSeal" xml:space="preserve">
    <value>Total Seal</value>
  </data>
  <data name="PileTip_HalfSeal" xml:space="preserve">
    <value>Half Seal</value>
  </data>
  <data name="PileTip_SingleBorad" xml:space="preserve">
    <value>Single Board</value>
  </data>
  <data name="PileTip_DoubleBoard" xml:space="preserve">
    <value>Double Board</value>
  </data>
  <data name="PileTip_QuadBoard" xml:space="preserve">
    <value>Quadruple Board</value>
  </data>
  <data name="PileNumber" xml:space="preserve">
    <value>Pile Number</value>
  </data>
  <data name="PileTopPoint" xml:space="preserve">
    <value>Top Point</value>
  </data>
  <data name="PileBottomPoint" xml:space="preserve">
    <value>Bottom Point</value>
  </data>
  <data name="PileTypeIllustration" xml:space="preserve">
    <value>Pile Type Illustration</value>
  </data>
  <data name="ReportGenerator" xml:space="preserve">
    <value>Report Generator</value>
  </data>
  <data name="ProjectName" xml:space="preserve">
    <value>Project Name</value>
  </data>
  <data name="ProjectPhase" xml:space="preserve">
    <value>Project Phase</value>
  </data>
  <data name="NumberOfVolume" xml:space="preserve">
    <value>Nubmer of Volume</value>
  </data>
  <data name="CalculatedItemName" xml:space="preserve">
    <value>Calculated Item Name</value>
  </data>
  <data name="Designer" xml:space="preserve">
    <value>Designer</value>
  </data>
  <data name="DesignDate" xml:space="preserve">
    <value>Design Date</value>
  </data>
  <data name="Checker" xml:space="preserve">
    <value>Checker</value>
  </data>
  <data name="CheckDate" xml:space="preserve">
    <value>Check Date</value>
  </data>
  <data name="Reviewer" xml:space="preserve">
    <value>Reviewer</value>
  </data>
  <data name="ReviewDate" xml:space="preserve">
    <value>Review Date</value>
  </data>
  <data name="Input" xml:space="preserve">
    <value>Input</value>
  </data>
  <data name="Generate" xml:space="preserve">
    <value>Generate</value>
  </data>
  <data name="PreliminaryFeasibilityStudy" xml:space="preserve">
    <value>Preliminary Feasibility Study</value>
  </data>
  <data name="FeasibilityStudy" xml:space="preserve">
    <value>Feasibility Study</value>
  </data>
  <data name="PreliminaryDesign" xml:space="preserve">
    <value>Preliminary Design</value>
  </data>
  <data name="ConstructionDesign" xml:space="preserve">
    <value>Construction Design</value>
  </data>
  <data name="WordFileFilter" xml:space="preserve">
    <value>Word(*.docx)|*.docx</value>
  </data>
</root>